{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["matchHtmlTags","console","log","process","BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","featuredImgFluid","get","useEffect","image","document","querySelector","style","disqusConfig","shortname","config","identifier","pathname","frontmatter","titleWithoutTags","replace","descWithoutTags","description","excerpt","postImage","marginTop","rhythm","marginBottom","dangerouslySetInnerHTML","__html","display","color","date","fontSize","timeToRead","pageUrl","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","href","src","princeJump","alt","className","pageQuery"],"mappings":"qSAYMA,EAAgB,eAEtBC,QAAQC,IAAIC,IA2HGC,UAzHU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,EAAYL,EAAKM,KAAKC,aAAaC,MACjCC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KACZC,EAAmBC,cACvBT,EACA,mDAGFU,qBAAU,WACR,IAAMC,EAAQC,SAASC,cAAc,8BACjCF,IACFA,EAAMG,MAAM,aAAe,aAE5B,IAEH,IAAMC,EAAe,CACnBC,UAAWrB,YACXsB,OAAQ,CACNC,WAAYnB,EAASoB,SACrBd,MAAOL,EAAKoB,YAAYf,QAItBgB,EAAmBrB,EAAKoB,YAAYf,MAAMiB,QAAQ9B,EAAe,IAEjE+B,GADOvB,EAAKoB,YAAYI,aAAexB,EAAKyB,SACrBH,QAAQ9B,EAAe,IAEpD,OACE,kBAAC,IAAD,CAAQO,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOgB,EACPG,YAAaD,EACbG,UAAWlB,IAEb,iCACE,gCACE,wBACEM,MAAO,CACLa,UAAWC,YAAO,GAClBC,aAAc,GAEhBC,wBAAyB,CAAEC,OAAQ/B,EAAKoB,YAAYf,SAEtD,uBACES,MAAO,CACLkB,QAAS,QACTH,aAAc,IAGhB,2BAAOf,MAAO,CAAEmB,MAAO,YACpBjC,EAAKoB,YAAYc,KAAM,IACxB,0BACEpB,MAAO,CAAEmB,MAAO,oBAAqBE,SAAUP,YAAO,MADxD,KAIQ,IACP5B,EAAKoC,WAPR,SAUF,kBAAC,IAAD,CACE/B,MAAOL,EAAKoB,YAAYf,MACxBgC,QAAStC,EAASoB,SAClBL,MAAO,CAAEe,aAAc,OAG3B,6BAASC,wBAAyB,CAAEC,OAAQ/B,EAAKsC,QACjD,wBACExB,MAAO,CACLa,UAAWC,YAAO,GAClBC,aAAcD,YAAO,MAGzB,gCACE,kBAAC,IAAD,QAIJ,6BACE,wBACEd,MAAO,CACLkB,QAAS,OACTO,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,4BACGpC,GACC,kBAAC,OAAD,CACEqC,GAAE,QAAUrC,EAASsC,OAAOC,KAC5BC,IAAI,OACJhB,wBAAyB,CACvBC,OAAO,KAAMzB,EAASc,YAAYf,UAK1C,4BACGE,GACC,kBAAC,OAAD,CACEoC,GAAE,QAAUpC,EAAKqC,OAAOC,KACxBC,IAAI,OACJhB,wBAAyB,CACvBC,OAAWxB,EAAKa,YAAYf,MAAtB,WAQlB,kBAAC,kBAAoBU,GACrB,uBAAGgC,KAAK,QACN,yBAAKC,IAAKC,IAAYC,IAAI,IAAIC,UAAU,mBAQzC,IAAMC,EAAS","file":"component---src-templates-blog-post-js-058be061a8dc9b7159f6.js","sourcesContent":["import React, { useEffect } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { DiscussionEmbed } from 'disqus-react'\nimport { get } from 'lodash'\n\nimport Bio from '../components/bio'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { rhythm } from '../utils/typography'\nimport princeJump from '../../content/assets/prince-jump.png'\nimport ShareToSocial from '../components/shareToSocial'\n\nconst matchHtmlTags = /<(\\/?)\\w+>/gi\n\nconsole.log(process.env)\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n  const featuredImgFluid = get(\n    post,\n    'frontmatter.featuredImage.childImageSharp.fluid',\n  )\n\n  useEffect(() => {\n    const image = document.querySelector('.gatsby-resp-image-wrapper')\n    if (image) {\n      image.style['max-width'] = 'initial'\n    }\n  }, [])\n\n  const disqusConfig = {\n    shortname: process.env.GATSBY_DISQUS_NAME,\n    config: {\n      identifier: location.pathname,\n      title: post.frontmatter.title,\n    },\n  }\n\n  const titleWithoutTags = post.frontmatter.title.replace(matchHtmlTags, '')\n  const desc = post.frontmatter.description || post.excerpt\n  const descWithoutTags = desc.replace(matchHtmlTags, '')\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={titleWithoutTags}\n        description={descWithoutTags}\n        postImage={featuredImgFluid}\n      />\n      <article>\n        <header>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n            dangerouslySetInnerHTML={{ __html: post.frontmatter.title }}\n          />\n          <p\n            style={{\n              display: 'block',\n              marginBottom: 0,\n            }}\n          >\n            <small style={{ color: '#a0a0a0' }}>\n              {post.frontmatter.date}{' '}\n              <span\n                style={{ color: 'var(--main-color)', fontSize: rhythm(0.5) }}\n              >\n                •\n              </span>{' '}\n              {post.timeToRead} min\n            </small>\n          </p>\n          <ShareToSocial\n            title={post.frontmatter.title}\n            pageUrl={location.pathname}\n            style={{ marginBottom: 20 }}\n          />\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginTop: rhythm(2),\n            marginBottom: rhythm(2),\n          }}\n        />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            listStyle: 'none',\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link\n                to={`blog/${previous.fields.slug}`}\n                rel=\"prev\"\n                dangerouslySetInnerHTML={{\n                  __html: `← ${previous.frontmatter.title}`,\n                }}\n              />\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link\n                to={`blog/${next.fields.slug}`}\n                rel=\"next\"\n                dangerouslySetInnerHTML={{\n                  __html: `${next.frontmatter.title} →`,\n                }}\n              />\n            )}\n          </li>\n        </ul>\n      </nav>\n      {/* eslint-disable-next-line */}\n      <DiscussionEmbed {...disqusConfig} />\n      <a href=\"#top\">\n        <img src={princeJump} alt=\"^\" className=\"jump-to-top\" />\n      </a>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      timeToRead\n      frontmatter {\n        title\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}